---
- name: Install Composer's dependencies
  composer:
    working_dir: "{{ symfony_root_dir }}"
    no_dev: "{{ 'yes' if ('prod' == symfony_env) else 'no' }}"
  #when: code_changed | bool
  tags:
    - deploy
- name: Fix var directory permissions
  file:
    path: "{{ symfony_var_dir }}"
    state: directory
    mode: 0777
    recurse: yes
  changed_when: false
  tags:
    - permissions
    - deploy
- name: Set Symfony secret in .env
  lineinfile:
    dest: "{{ symfony_root_dir }}/.env"
    regexp: "APP_SECRET="
    line: "APP_SECRET={{ symfony_secret }}"
  tags:
    - deploy
# Symfony console commands
- name: Create DB if not exists
  command: '{{ symfony_doctrine_path }} doctrine:database:create --if-not-exists'
  register: db_create_result
  #changed_when: db_create_result.stdout is not search('already exists. Skipped')
  tags:
    - deploy
- debug:
    var: db_create_result
  tags:
    - deploy
#- name: Execute migrations
#  command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
#- name: Load data fixtures
# command: '{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load --no-interaction'
- name: Clear cache
  command: '{{ symfony_console_path }} cache:clear --env={{ symfony_env }}'
  #changed_when: false
  tags:
    - deploy